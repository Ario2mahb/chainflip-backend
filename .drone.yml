kind: pipeline
type: docker
name: chainflip-state-chain-pr

steps:
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<< pull_request >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# Pull request check and build
  - name: check-state-chain-dev
    image: chainflip.jfrog.io/chainflip-backend/rust-base:latest
    environment:
      SCCACHE_DIR: /cache
    commands:
      - SKIP_WASM_BUILD=1 cargo check --release
      - sccache -s
    volumes:
      - name: cache
        path: /cache
  - name: compile-state-chain-dev
    image: chainflip.jfrog.io/chainflip-backend/rust-base:latest
    environment:
      SCCACHE_DIR: /cache
    commands:
      - cargo build --release
      - sccache -s
    volumes:
      - name: cache
        path: /cache

# Config
trigger:
  event:
    - pull_request
  paths:
    - state-chain/*
node:
  builder: "true"
volumes:
  - name: cache
    host:
      path: /mnt/chainflip-build-runner/sccache
image_pull_secrets:
  - dockerconfigjson

---

kind: pipeline
type: docker
name: chainflip-state-chain

# <<<<<<<<<<<<<<<<<<<<<<<<<<<<< main >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# Merge to master build and publish
steps:
  - name: compile-state-chain
    image: chainflip.jfrog.io/chainflip-backend/rust-base:latest
    environment:
      SCCACHE_DIR: /cache
    commands:
      - cargo build --release -Zmultitarget --target x86_64-apple-darwin --target wasm32-unknown-unknown
      - sccache -s
    volumes:
      - name: cache
        path: /cache
  - name: publish-state-chain-node
    image: docker.bintray.io/jfrog/jfrog-cli-go:latest
    environment:
      access_token:
        from_secret: jfrog_access_token
      url:
        from_secret: jfrog_artifactory_url
    commands:
      - jfrog rt u --access-token $access_token --url $url ./target/x86_64-apple-darwin/release/state-chain-node state-chain-node/x86_64-apple-darwin_state-chain-node
      - jfrog rt u --access-token $access_token --url $url ./target/wasm32-unknown-unknown/release/state-chain-node state-chain-node/wasm32-unknown-unknown_state-chain-node

# Config
trigger:
  branch:
    - main
  event:
    - push
node:
  builder: "true"
volumes:
  - name: cache
    host:
      path: /mnt/chainflip-build-runner/sccache
image_pull_secrets:
  - dockerconfigjson

---
# Build the base rust image for compiling all rust projects.
kind: pipeline
type: docker
name: build-base-images

steps:
  - name: rust-base
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: chainflip.jfrog.io/chainflip-backend/rust-base
      dockerfile: Dockerfile.rust-base
      registry: chainflip.jfrog.io
      tags: latest
      cache_from: chainflip.jfrog.io/chainflip-backend/rust-base:latest

# Config
trigger:
  paths:
    - Dockerfile.rust-base
node:
  builder: "true"
volumes:
  - name: cache
    host:
      path: /mnt/chainflip-build-runner/sccache
image_pull_secrets:
  - dockerconfigjson

---
# Run checks on infrastructure configuration prior to merge.
kind: pipeline
name: ci-checks
type: docker

steps:
  - name: lint-drone-yml
    pull: always
    image: chainflip.jfrog.io/infrastructure/chainflip-master:latest
    commands:
      - drone lint --trusted


trigger:
  event:
    exclude:
      - pull_request
  paths:
    - .drone.yml
    - Dockerfile.rust-base

image_pull_secrets:
  - dockerconfigjson

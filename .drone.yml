#kind: pipeline
#type: docker
#name: chainflip-state-chain-pr
#
#steps:
## <<<<<<<<<<<<<<<<<<<<<<<<<<<<< pull_request >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
## Pull request check and build
#  - name: check-state-chain-dev
#    image: ghcr.io/chainflip-io/chainflip-backend/rust-base:latest
#    environment:
#      SCCACHE_DIR: /cache
#    commands:
#      - SKIP_WASM_BUILD=1 cargo check --release
#      - sccache -s
#    volumes:
#      - name: cache
#        path: /cache
#  - name: compile-state-chain-dev
#    image: ghcr.io/chainflip-io/chainflip-backend/rust-base:latest
#    environment:
#      SCCACHE_DIR: /cache
#    commands:
#      - cargo build --release
#      - sccache -s
#    volumes:
#      - name: cache
#        path: /cache
#
## Config
#trigger:
#  event:
#    - pull_request
#  paths:
#    - state-chain/*
#node:
#  builder: "true"
#volumes:
#  - name: cache
#    host:
#      path: /mnt/chainflip-build-runner/sccache
#image_pull_secrets:
#  - dockerconfigjson
#
#---

kind: pipeline
type: docker
name: chainflip-state-chain

# <<<<<<<<<<<<<<<<<<<<<<<<<<<<< main >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# Merge to master build and publish
steps:
  - name: rust-base
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: ghcr.io/chainflip-io/chainflip-backend/rust-base
      dockerfile: Dockerfile.rust-base
      registry: ghcr.io
      tags: latest
      cache_from: ghcr.io/chainflip-io/chainflip-backend/rust-base:latest
    when: 
      paths:
        - Dockerfile.rust-base
        - .drone.yml
  - name: compile-state-chain-linux
    image: ghcr.io/chainflip-io/chainflip-backend/rust-base:latest
    failure: ignore
    environment:
      SCCACHE_DIR: /cache
    commands:
      - cargo deb -p state-chain-node --output ./.ansible/upload/files/ --
      - sccache -s
    volumes:
      - name: cache
        path: /cache
  - name: publish-state-chain-node
    image: plugins/ansible
    settings:
      verbose: 2
      playbook: .ansible/upload/playbook.yml
      inventory: .ansible/upload/inventory
      private_key:
        from_secret: ansible_private_key


# Config
trigger:
#  branch:
#    - main
  event:
    - push
node:
  builder: "true"
volumes:
  - name: cache
    host:
      path: /mnt/chainflip-build-runner/sccache
image_pull_secrets:
  - dockerconfigjson

#---
# Build the base rust image for compiling all rust projects.
#kind: pipeline
#type: docker
#name: build-base-images
#
#steps:
#  - name: rust-base
#    image: plugins/docker
#    settings:
#      username:
#        from_secret: docker_username
#      password:
#        from_secret: docker_password
#      repo: ghcr.io/chainflip-io/chainflip-backend/rust-base
#      dockerfile: Dockerfile.rust-base
#      registry: ghcr.io
#      tags: latest
#      cache_from: ghcr.io/chainflip-io/chainflip-backend/rust-base:latest
#
## Config
#trigger:
#  event:
#    - pull_request
#  paths:
#    - Dockerfile.rust-base
#image_pull_secrets:
#  - dockerconfigjson

---
# Run checks on infrastructure configuration prior to merge.
kind: pipeline
name: ci-checks
type: docker

steps:
  - name: lint-drone-yml
    image: ghcr.io/chainflip-io/infrastructure/chainflip-master:latest
    commands:
      - drone lint --trusted

trigger:
  event:
    exclude:
      - pull_request
  paths:
    - .drone.yml
    - Dockerfile.rust-base

image_pull_secrets:
  - dockerconfigjson
